using Stix.Core;
using Stix.Core.Entities;
using Stix.Core.Interfaces;

namespace Stix.Infrastructure
{
    public class VulnerabilityRepository : Repository<Vulnerability>, IVulnerabilityRepository
    {
        public VulnerabilityRepository(StixDbContext stixDbContext) : base(stixDbContext) { }
        public async Task<Vulnerability?> GetVulnerabilityById(string id)
        {
            return await GetById(id);
        }

        public async Task<IEnumerable<Vulnerability>> GetAllVulnerabilities()
        {
            return await GetAll();
        }

        public async Task<Vulnerability> CreateVulnerability(Vulnerability vulnerability)
        {
            return await Create(vulnerability);
        }

        public async Task DeleteVulnerability(Vulnerability vulnerability)
        {
            await Delete(vulnerability);
        }

        public Task Update(Vulnerability vulnerability)
        {
            throw new NotImplementedException();
        }
    }
}